using DevExpress.Data.ODataLinq.Helpers;
using DevExpress.XtraEditors;
using DevExpress.XtraGrid.Columns;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace GestionMagasins
{
    public partial class FrmBcsuite : Form
    {

        dbContextDataContext db = new dbContextDataContext();
        private string a;


        public FrmBcsuite(string a)
        {

            InitializeComponent();
            this.a = a;
            // This line of code is generated by Data Source Configuration Wizard
            //gcdetail_art.DataSource = new GestionMagasins.dbContextDataContext().detail_BC2;
        }

        private void FrmBcsuite_Load(object sender, EventArgs e)
        {


            if (a != null)
            {
                Article1 d = new Article1();
                totalprix dr = new totalprix();

                //bon_commande R = db.bon_commande.FirstOrDefault(m => m.id_commande == Int32.Parse(a));
                bon_commande R = db.bon_commande.FirstOrDefault(f => f.id_commande == Int32.Parse(a));

                txtncommande.Text = R.numero_commande.ToString();


                textecheance.Text = R.date_echeance.ToString();
                textlivraison.Text = R.date_livraison.ToString();
                txtBc.Text = R.date_bc.ToString();
                textmode.EditValue = R.mode_reglement;
                //txtobservation.Text = R.observation;
                txtreference.Text = R.reference;
                txtfour.EditValue = R.Id_four;
                txtobservation.Text = R.observation;
                load();
               





            }
            else
            {
                bon_commande m = new bon_commande();


                int idcom = db.bon_commande.Any() ? db.bon_commande.Max(x => x.id_commande) + 1 : 1;
                txtncommande.Text = "BC000" + idcom.ToString();
            }


            four();
            repositoryItem.DataSource = db.Article1;
            repositoryItemmag.DataSource = db.Magasin1;





        }


        private void four()
        {


            var query = from m in db.Fournisseur
                        select new { Id_fournisseur = m.Id_four, Intitulé = m.Nom_four };

            txtfour.Properties.DataSource = query.ToList();
            txtfour.Properties.DisplayMember = "Intitulé";
            txtfour.Properties.ValueMember = "Id_fournisseur";


        }
        private void load()
        {
            List<detail_BC2> re = db.detail_BC2
                 .Where(m => m.Id_commande == Int32.Parse(a)).ToList();
            if (re == null)
            {

            }


            else
            {
                detailBC2BindingSource1.DataSource = re;
            }








        }




        private void simpleButton1_Click(object sender, EventArgs e)
        {
            Fournisseur d = new Fournisseur();
            bon_commande r = new bon_commande();
            if (a == null)
            {
                 

                        r.numero_commande = txtncommande.Text;
                    r.date_echeance = textecheance.DateTime;
                    r.date_livraison = textlivraison.DateTime;
                    r.date_bc = txtBc.DateTime;
                    r.mode_reglement = textmode.Text;
                    r.observation = txtobservation.Text;
                    r.reference = txtreference.Text;

                    if (!string.IsNullOrEmpty(txtfour.EditValue?.ToString()))
                    {
                        string selectedFam = txtfour.EditValue.ToString();
                        var selectedId = from x in db.Fournisseur
                                         where x.Nom_four.Equals(selectedFam)
                                         select x.Id_four;
                        r.Id_four = Int32.Parse(selectedFam);
                    }
                    db.bon_commande.InsertOnSubmit(r);
                    db.SubmitChanges();
                    a = r.id_commande.ToString();
                    Table_1 h = new Table_1();
                    h.Id_commande = Int32.Parse(a);
                    db.Table_1.InsertOnSubmit(h);
                    db.SubmitChanges();
                    Close();

            }
            else
            {
                bon_commande R = db.bon_commande.FirstOrDefault(m => m.id_commande == Int32.Parse(a));
                R.numero_commande = txtncommande.Text;
                R.date_echeance = textecheance.DateTime;
                R.date_livraison = textlivraison.DateTime;
                R.date_bc = txtBc.DateTime;
                R.mode_reglement = textmode.Text;
                R.observation = txtobservation.Text;
                R.reference = txtreference.Text;
                if (!String.IsNullOrEmpty(txtfour.EditValue?.ToString()))
                {
                    string selectedFam = txtfour.EditValue.ToString();
                    var selectedId = from x in db.Fournisseur
                                     where x.Nom_four.Equals(selectedFam)
                                     select x.Id_four;
                    R.Id_four = Int32.Parse(selectedFam);

                }
                db.SubmitChanges();

                detail_BC2 lm = new detail_BC2();
                bon_commande lmm = new bon_commande();
                
                int bd = Int32.Parse(a);
                int id_article = Convert.ToInt32(gvdetail__art.GetRowCellValue(gvdetail__art.FocusedRowHandle, "Id_Article"));
               
                bool articleExiste = db.detail_BC2.Any(dc => dc.Id_Article == id_article && dc.Id_commande == bd);

                if (!articleExiste)
                {
                    Article1 az = db.Article1.FirstOrDefault(art => art.Id_Article == id_article);

                    int idcom = db.detail_BC2.Any() ? db.detail_BC2.Max(x => x.Id_detail) + 1 : 1;

                    int pri = Int32.Parse(az.Prix_achat.ToString());
                    gvdetail__art.SetRowCellValue(gvdetail__art.FocusedRowHandle, "Prix_Ht", pri);
                    int  prix_HT = Convert.ToInt32(gvdetail__art.GetRowCellValue(gvdetail__art.FocusedRowHandle, "Prix_Ht"));

                    int qte = Convert.ToInt32(gvdetail__art.GetRowCellValue(gvdetail__art.FocusedRowHandle, "Qte"));


                    int montant = prix_HT * qte;

                    gvdetail__art.SetRowCellValue(gvdetail__art.FocusedRowHandle, "Montant", montant);

                    int id_Magasin = Convert.ToInt32(gvdetail__art.GetRowCellValue(gvdetail__art.FocusedRowHandle, "Id_magasin"));
                    lm.Id_detail = idcom;
                    lm.Id_commande = bd;
                    lm.Id_Article = id_article;
                    lm.Prix_Ht = prix_HT;
                    lm.Montant = montant;
                    lm.Qte = qte;
                    totalprix tlt = new totalprix();
                    tlt.Id_commande = Int32.Parse(a);

                    

                 
                    db.detail_BC2.InsertOnSubmit(lm);
                    db.SubmitChanges();






                }

                else
                {

                }

            }
         

        }



        private void repositoryItemButtonEdit1_Click(object sender, EventArgs e)
        {





            
            String ti = gvdetail__art.GetFocusedRowCellValue(colId_Article).ToString();
            String pm = gvdetail__art.GetFocusedRowCellValue(colId_detail).ToString();
            string HO = gvdetail__art.GetFocusedRowCellValue(colId_commande).ToString();

            

            var HY = from r in db.BLSuite
                     where r.Intitulee == Int32.Parse(ti) && r.id_livraison == db.bon_livraison.Where(t=>t.id_commande == Int32.Parse(HO)).FirstOrDefault().id_livraison
                     select r;
            var row = from n in db.BCsuite
                      where n.Intitule == Int32.Parse(ti) && n.id_bonretour == db.bon_retour.Where(s=>s.Id_livraison == db.bon_livraison.Where(t=> t.id_commande == Int32.Parse(HO)).FirstOrDefault().id_livraison).FirstOrDefault().Id_bonretour
                      select n;
            //var ji = from j in db.Art_Stock
            //         where j.Id_Article == db.BLSuite.Where(t=>t.Intitulee == Int32.Parse(ti)).FirstOrDefault().Intitulee
            //         select j;
            var dlg = MessageBox.Show($"voulez vous supprimer {pm}  ?", "Confirmation", MessageBoxButtons.YesNo, MessageBoxIcon.Warning);
            if (dlg == DialogResult.Yes)
            {
                int ifi = Int32.Parse(a);
                int hy = Int32.Parse(ti);

                var detailArticleToDelete = db.detail_BC2.FirstOrDefault(da => da.Id_Article == hy && da.Id_commande == ifi);
                var del = db.detail_BC2.FirstOrDefault(da => da.Id_Article == hy && da.Id_commande == db.bon_livraison.Where(s => s.id_livraison == db.BLSuite.Where(t => t.id_detail == Int32.Parse(ti)).FirstOrDefault().id_livraison).FirstOrDefault().id_commande);

                if (detailArticleToDelete != null)
                {
                   
                    Art_Stock dd = db.Art_Stock.FirstOrDefault(f => f.Id_Article == Int32.Parse(ti));
                    if (dd != null)
                    {
                        
                        String tb = db.BLSuite.Where(r => r.Intitulee == int.Parse(ti)).FirstOrDefault().Qte_livrée.ToString();
                        String rv = db.BCsuite.Where(t=> t.Intitule == int.Parse(ti)).FirstOrDefault().qte.ToString();
                        if (dd.Qte == Int32.Parse(tb))
                        {
                            db.Art_Stock.DeleteAllOnSubmit<Art_Stock>(new List<Art_Stock> { dd });
                        }
                        else
                        {
                            dd.Qte = dd.Qte - Int32.Parse(tb);
                        }
                        
                        
                            dd.Qte = dd.Qte + Int32.Parse(rv);
                        
                    }
                   
            
                    db.BLSuite.DeleteAllOnSubmit(HY);

                    db.BCsuite.DeleteAllOnSubmit(row);
                  
                    db.detail_BC2.DeleteOnSubmit(detailArticleToDelete);

                    // Enregistrer les modifications
                    db.SubmitChanges();

                    // Rafraîchir la grille de données
                    load();
                }
                else
                {

                }



            }

        }

        private void txtfour_EditValueChanged(object sender, EventArgs e)
        {
            if(txtfour != null)
            {
                string id = txtfour.EditValue.ToString();
                Fournisseur f = db.Fournisseur.Where(y => y.Id_four == Convert.ToInt32(id)).FirstOrDefault();
                string d = f.Delai_livraison.ToString();
                textlivraison.Text = d;


            }
        }
    }
}


